using System.Collections.Generic;
using System.Linq;
using Kingmaker.Blueprints;
using Kingmaker.Blueprints.Classes;
using Kingmaker.Blueprints.Classes.Spells;
using Kingmaker.Blueprints.Classes.Selection;
using Kingmaker.Designers.Mechanics.Facts;
using Kingmaker.UnitLogic.Abilities.Blueprints;
using Kingmaker.UnitLogic.Abilities.Components;
using Kingmaker.UnitLogic.FactLogic;
using Kingmaker.Blueprints.JsonSystem;
using UnityEngine;
using UnityEngine.Serialization;
using TabletopTweaks.Core.Utilities;
using MythicArcanist.NewComponents;
using static MythicArcanist.Main;

using HarmonyLib;
using Kingmaker.Blueprints.Items.Components;
using Kingmaker.UnitLogic;
using Kingmaker.Utility;

namespace MythicArcanist.NewContent.ClassFeatures.ArcanistExploits
{
    internal class ReligiousFocus
    {
        /*Religious Focus (Ex): The arcanist gains limited access to the cleric spell list. When preparing spells, the arcanist may prepare one spell per spell 
         level from this new list. The arcanist must know the spell and have it scribed in their book, as usual. Cleric spells may be scribed into the arcanist's 
        spellbook from scrolls or chosen as bonus spells when gaining a level in the arcanist class.*/
        public static void Add()
        {
            var ArcanistClass = BlueprintTools.GetBlueprint<BlueprintCharacterClass>("52dbfd8505e22f84fad8d702611f60b7");
            var ArcanistSpellbook = BlueprintTools.GetBlueprint<BlueprintSpellbook>("33903fe5c4abeaa45bc249adb9d98848");
            var NatureMageSpellbook = BlueprintTools.GetBlueprint<BlueprintSpellbook>("3ed7e38dc8134af28e1a2b105f74fb7b");
            var UnletteredArcanistSpellbook = BlueprintTools.GetBlueprint<BlueprintSpellbook>("b242f991107095d41ae129f46ed5d97a");

            var ClericSpellList = BlueprintTools.GetBlueprint<BlueprintSpellList>("8443ce803d2d31347897a3d85cc32f53");
            var DruidSpellList = BlueprintTools.GetBlueprint<BlueprintSpellList>("bad8638d40639d04fa2f80a1cac67d6b");
            var WitchSpellList = BlueprintTools.GetBlueprint<BlueprintSpellList>("e17df9977b879b64e8a8cbb4b3569f19");
            var WizardSpellList = BlueprintTools.GetBlueprint<BlueprintSpellList>("ba0401fdeb4062f40a7aa95b6f07fe89");

            var icon = BlueprintTools.GetBlueprint<BlueprintAbility>("e84fc922ccf952943b5240293669b171").Icon; //RestorationLesser

            #region Arcanist Base Spell List
            var ArcanistReligiousFocusSpellList = WizardSpellList.CreateCopy(ThisModContext, "ArcanistReligiousFocusSpellList");
            foreach (SpellLevelList spellLevelList in WizardSpellList.SpellsByLevel)
            {
                foreach (BlueprintAbility spell in spellLevelList.m_Spells)
                {
                    spell.AddToSpellList(ArcanistReligiousFocusSpellList, spellLevelList.SpellLevel);
                }
            }
            foreach (SpellLevelList spellLevelList in ClericSpellList.SpellsByLevel)
            {
                foreach (BlueprintAbility spell in spellLevelList.m_Spells)
                {
                    spell.AddToSpellList(ArcanistReligiousFocusSpellList, spellLevelList.SpellLevel);
                }
            }
            #endregion
            #region Nature Mage Archetype Spell List
            var NatureMageReligiousFocusSpellList = DruidSpellList.CreateCopy(ThisModContext, "NatureMageReligiousFocusSpellList");
            foreach (SpellLevelList spellLevelList in DruidSpellList.SpellsByLevel)
            {
                foreach (BlueprintAbility spell in spellLevelList.m_Spells)
                {
                    spell.AddToSpellList(NatureMageReligiousFocusSpellList, spellLevelList.SpellLevel);
                }
            }
            foreach (SpellLevelList spellLevelList in ClericSpellList.SpellsByLevel)
            {
                foreach (BlueprintAbility spell in spellLevelList.m_Spells)
                {
                    spell.AddToSpellList(NatureMageReligiousFocusSpellList, spellLevelList.SpellLevel);
                }
            }
            #endregion
            #region Unlettered Arcanist Spell List
            var UnletteredArcanistReligiousFocusSpellList = WitchSpellList.CreateCopy(ThisModContext, "UnletteredArcanistReligiousFocusSpellList");
            foreach (SpellLevelList spellLevelList in WitchSpellList.SpellsByLevel)
            {
                foreach (BlueprintAbility spell in spellLevelList.m_Spells)
                {
                    spell.AddToSpellList(UnletteredArcanistReligiousFocusSpellList, spellLevelList.SpellLevel);
                }
            }
            foreach (SpellLevelList spellLevelList in ClericSpellList.SpellsByLevel)
            {
                foreach (BlueprintAbility spell in spellLevelList.m_Spells)
                {
                    spell.AddToSpellList(UnletteredArcanistReligiousFocusSpellList, spellLevelList.SpellLevel);
                }
            }
            #endregion

            string featureName = "Religious Focus";
            string featureDescription = "The arcanist gains limited access to the cleric spell list. When preparing spells, the arcanist may prepare " +
                    "one spell per spell level from this new list. The arcanist must know the spell and have it scribed in their book, as usual. Cleric spells may " +
                    "be scribed into the arcanist's spellbook from scrolls or chosen as bonus spells when gaining a level in the arcanist class.";

            var ArcanistExploitReligiousFocus = Helpers.CreateBlueprint<BlueprintFeature>(ThisModContext, "ArcanistExploitReligiousFocus", bp =>
            {
                bp.SetName(ThisModContext, featureName);
                bp.SetDescription(ThisModContext, featureDescription);
                bp.m_Icon = icon;
                bp.Groups = new FeatureGroup[] { FeatureGroup.ArcanistExploit };
                bp.IsClassFeature = true;
                bp.Ranks = 1;
                bp.ReapplyOnLevelUp = false;
                bp.AddComponent<ReplaceSpellList>(c =>
                {
                    c.m_SpellList = ArcanistReligiousFocusSpellList.ToReference<BlueprintSpellListReference>();
                    c.m_CharacterClass = ArcanistClass.ToReference<BlueprintCharacterClassReference>();
                    c.m_ReplaceSpellList = ArcanistSpellbook.m_SpellList;
                });
                bp.AddComponent<ReplaceSpellList>(c =>
                {
                    c.m_SpellList = NatureMageReligiousFocusSpellList.ToReference<BlueprintSpellListReference>();
                    c.m_CharacterClass = ArcanistClass.ToReference<BlueprintCharacterClassReference>();
                    c.m_ReplaceSpellList = NatureMageSpellbook.m_SpellList;
                });
                bp.AddComponent<ReplaceSpellList>(c =>
                {
                    c.m_SpellList = UnletteredArcanistReligiousFocusSpellList.ToReference<BlueprintSpellListReference>();
                    c.m_CharacterClass = ArcanistClass.ToReference<BlueprintCharacterClassReference>();
                    c.m_ReplaceSpellList = UnletteredArcanistSpellbook.m_SpellList;
                });
            });

            if (ThisModContext.ThirdParty.ArcanistExploits.IsDisabled("ReligiousFocus")) { return; }
            FeatTools.AddAsArcanistExploit(ArcanistExploitReligiousFocus);
        }
        //[HarmonyPatch(typeof(CopyScroll), nameof(CopyScroll.CanCopySpell))]
        //static class CopyScroll_CanCopySpell_CopyScrollFromOtherSpellbook_Patch
        //{
        //    static public bool Postfix(BlueprintAbility spell, Spellbook spellbook, ref bool __result)
        //    {
        //        __result = spellbook.Blueprint.CanCopyScrolls &&
        //            !spellbook.IsKnown(spell) &&
        //            (spellbook.Blueprint.SpellList.Contains(spell) ||
        //            (spellbook.m_SpecialLists.Any(list => list.Contains(spell)) && 
        //            spellbook.Owner.HasFact(BlueprintTools.GetBlueprint<BlueprintFeature>("9133ffc5f0cb4760a82a559eb0cd5470"))));
        //        return false;
        //    }
        //}
    }
}

//var ArcanistReligiousFocusSpellsPerDayTable = Helpers.CreateBlueprint<BlueprintSpellsTable>(ThisModContext, "ArcanistReligiousFocusSpellsPerDayTable", bp =>
//{
//    List<SpellsLevelEntry> entries = new List<SpellsLevelEntry>();
//    var spellSlotsTable = new List<int[]>
//    {
//        new[] {0}, //Level 0
//        new[] {0,1}, //Level 1
//        new[] {0,1}, //Level 2
//        new[] {0,1}, //Level 3
//        new[] {0,1,1}, //Level 4
//        new[] {0,1,1}, //Level 5
//        new[] {0,1,1,1}, //Level 6
//        new[] {0,1,1,1}, //Level 7
//        new[] {0,1,1,1,1}, //Level 8
//        new[] {0,1,1,1,1}, //Level 9
//        new[] {0,1,1,1,1,1}, //Level 10
//        new[] {0,1,1,1,1,1}, //Level 11
//        new[] {0,1,1,1,1,1,1}, //Level 12
//        new[] {0,1,1,1,1,1,1}, //Level 13
//        new[] {0,1,1,1,1,1,1,1}, //Level 14
//        new[] {0,1,1,1,1,1,1,1}, //Level 15
//        new[] {0,1,1,1,1,1,1,1,1}, //Level 16
//        new[] {0,1,1,1,1,1,1,1,1}, //Level 17
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 18
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 19
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 20
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 21
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 22
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 23
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 24
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 25
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 26
//        new[] {0,1,1,1,1,1,1,1,1,1}, //Level 27
//        new[] {0,1,1,1,1,1,1,1,1,1,1}, //Level 28
//    };
//    entries.AddRange(spellSlotsTable.Select(slots => new SpellsLevelEntry { Count = slots }));
//    bp.Levels = entries.ToArray();
//
//});

//var ArcanistReligiousFocusSpellList = Helpers.CreateBlueprint<BlueprintSpellList>(ThisModContext, "ArcanistReligiousFocusSpellList", bp =>
//{
//    bp.SpellsByLevel = new SpellLevelList[11];
//});

//int newSpellLevelListLevel = 0;
//foreach (SpellLevelList newSpellLevelList in ArcanistReligiousFocusSpellList.SpellsByLevel)
//{
//    newSpellLevelList.SpellLevel = newSpellLevelListLevel;
//    newSpellLevelListLevel++;
//}

//var ArcanistReligiousFocusSpellbook = Helpers.CreateBlueprint<BlueprintSpellbook>(ThisModContext, "ArcanistReligiousFocusSpellbook", bp =>
//{
//    bp.Name = Helpers.CreateString(ThisModContext, "ArcanistSpellbookReligiousFocus.Name", "Religious Focus");
//    bp.m_SpellsPerDay = ArcanistReligiousFocusSpellsPerDayTable.ToReference<BlueprintSpellsTableReference>();
//    bp.m_SpellSlots = ArcanistSpellbook.m_SpellSlots;
//    bp.m_SpellList = ArcanistReligiousFocusSpellList.ToReference<BlueprintSpellListReference>();
//    bp.m_CharacterClass = ArcanistClass.ToReference<BlueprintCharacterClassReference>();
//    bp.CastingAttribute = Kingmaker.EntitySystem.Stats.StatType.Intelligence;
//    bp.Spontaneous = true;
//    bp.SpellsPerLevel = 1;
//    bp.CantripsType = CantripsType.Cantrips;
//    bp.CasterLevelModifier = 0;
//    bp.CanCopyScrolls = true;
//    bp.IsArcane = true;
//    bp.IsArcanist = true;
//    bp.HasSpecialSpellList = false;
//});

//var ArcanistReligiousFocusSpellbook = ArcanistSpellbook.CreateCopy(ThisModContext, "ArcanistReligiousFocusSpellbook", bp =>
//{
//    bp.m_SpellList = ArcanistReligiousFocusSpellList.ToReference<BlueprintSpellListReference>();
//    //bp.HasSpecialSpellList = true;
//    //bp.SpecialSpellListName = Helpers.CreateString(ThisModContext, "ArcanistSpellbookSpecial.SpellListName", "Religious Focus Spell");
//});

//var ArcanistExploitReligiousFocus = Helpers.CreateBlueprint<BlueprintFeatureReplaceSpellbook>(ThisModContext, "ArcanistExploitReligiousFocus", bp =>
//{
//    bp.SetName(ThisModContext, featureName);
//    bp.SetDescription(ThisModContext, featureDescription);
//    bp.m_Icon = icon;
//    bp.Groups = new FeatureGroup[] { FeatureGroup.ArcanistExploit };
//    bp.IsClassFeature = true;
//    bp.Ranks = 1;
//    bp.ReapplyOnLevelUp = true;
//    //bp.AddComponent<AddSpecialSpellList>(c =>
//    //{
//    //    c.m_CharacterClass = ArcanistClass.ToReference<BlueprintCharacterClassReference>();
//    //    c.m_SpellList = WizardSpellList.ToReference<BlueprintSpellListReference>();
//    //});
//    //bp.AddComponent<AddSpecialSpellList>(c =>
//    //{
//    //    c.m_CharacterClass = ArcanistClass.ToReference<BlueprintCharacterClassReference>();
//    //    c.m_SpellList = ClericSpellList.ToReference<BlueprintSpellListReference>();
//    //});
//    bp.m_Spellbook = ArcanistSpellbookSpecial.ToReference<BlueprintSpellbookReference>();
//});
